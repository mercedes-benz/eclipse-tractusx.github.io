"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[6442],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,k=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(k,i(i({ref:t},s),{},{components:n})):a.createElement(k,i({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85242:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={},i="Introduction",l={unversionedId:"kits/product-edc/docs/README",id:"kits/product-edc/docs/README",title:"Introduction",description:"The EDC Repository creates runnable applications out of EDC extensions from the Eclipse DataSpace Connector repository.",source:"@site/docs/kits/product-edc/docs/README.md",sourceDirName:"kits/product-edc/docs",slug:"/kits/product-edc/docs/",permalink:"/docs/kits/product-edc/docs/",draft:!1,editUrl:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs/kits/product-edc/docs/README.md",tags:[],version:"current",frontMatter:{},sidebar:"kits",previous:{title:"Development View",permalink:"/docs/kits/product-edc/docs/kit/development-view/page00_development_view"},next:{title:"Domain Model",permalink:"/docs/kits/product-edc/docs/kit/adoption-view/Domain Model"}},c={},p=[{value:"Connector Setup",id:"connector-setup",level:2},{value:"Recommended Documentation",id:"recommended-documentation",level:2},{value:"This Repository",id:"this-repository",level:3},{value:"Eclipse Dataspace Connector",id:"eclipse-dataspace-connector",level:3},{value:"Catena-X",id:"catena-x",level:3}],s={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"The EDC Repository creates runnable applications out of EDC extensions from the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/eclipse-edc/Connector"},"Eclipse DataSpace Connector")," repository."),(0,r.kt)("p",null,"When running a EDC connector from the Product EDC repository there are three setups to choose from. They only vary by using different extensions for"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Resolving of Connector-Identities"),(0,r.kt)("li",{parentName:"ul"},"Persistence of the Control-Plane-State"),(0,r.kt)("li",{parentName:"ul"},"Persistence of Secrets (Vault)")),(0,r.kt)("h2",{id:"connector-setup"},"Connector Setup"),(0,r.kt)("p",null,"The four supported setups are."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Setup 1: In Memory & Azure Vault",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/edc-controlplane/edc-controlplane-memory/"},"Control Plane"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/eclipse-edc/Connector/tree/main/extensions/common/iam/oauth2/daps"},"IDS DAPS Extensions")),(0,r.kt)("li",{parentName:"ul"},"In Memory Persistence done by using no extension"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/eclipse-edc/Connector/tree/main/extensions/common/vault/azure-vault"},"Azure Key Vault Extension")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/edc-dataplane/edc-dataplane-azure-vault/"},"Data Plane"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/eclipse-edc/Connector/tree/main/extensions/common/vault/azure-vault"},"Azure Key Vault Extension")))))),(0,r.kt)("li",{parentName:"ul"},"Setup 2: In Memory & HashiCorp Vault"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/edc-controlplane/edc-controlplane-memory/"},"Control Plane"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/eclipse-edc/Connector/tree/main/extensions/common/iam/oauth2/daps"},"IDS DAPS Extensions")),(0,r.kt)("li",{parentName:"ul"},"In Memory Persistence done by using no extension"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/edc-extensions/hashicorp-vault/"},"HashiCorp Vault Extension")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/edc-dataplane/edc-dataplane-azure-vault/"},"Data Plane"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/edc-extensions/hashicorp-vault/"},"HashiCorp Vault Extension")))),(0,r.kt)("li",{parentName:"ul"},"Setup 2: PostgreSQL & Azure Vault",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/edc-controlplane/edc-controlplane-postgresql/"},"Control Plane"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/eclipse-edc/Connector/tree/main/extensions/common/iam/oauth2/daps"},"IDS DAPS Extensions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/eclipse-edc/Connector/tree/main/extensions/control-plane/store/sql"},"PostgreSQL Persistence Extensions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/eclipse-edc/Connector/tree/main/extensions/common/vault/azure-vault"},"Azure Key Vault Extension")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/edc-dataplane/edc-dataplane-azure-vault/"},"Data Plane"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/eclipse-edc/Connector/tree/main/extensions/common/vault/azure-vault"},"Azure Key Vault Extension")))))),(0,r.kt)("li",{parentName:"ul"},"Setup 3: PostgreSQL & HashiCorp Vault",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/edc-controlplane/edc-controlplane-postgresql-hashicorp-vault/"},"Control Plane"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/eclipse-edc/Connector/tree/main/extensions/common/iam/oauth2/daps"},"IDS DAPS Extensions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/eclipse-edc/Connector/tree/main/extensions/control-plane/store/sql"},"PostgreSQL Persistence Extensions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/edc-extensions/hashicorp-vault/"},"HashiCorp Vault Extension")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/edc-dataplane/edc-dataplane-hashicorp-vault/"},"Data Plane"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/edc-extensions/hashicorp-vault/"},"HashiCorp Vault Extension"))))))),(0,r.kt)("h2",{id:"recommended-documentation"},"Recommended Documentation"),(0,r.kt)("h3",{id:"this-repository"},"This Repository"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/docs/migration/Version_0.0.x_0.1.x"},"Update EDC Version from 0.0.x - 0.1.x")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../edc-controlplane"},"Application: Control Plane")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../edc-dataplane"},"Application: Data Plane")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/edc-extensions/business-partner-validation/"},"Extension: Business Partner Numbers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/edc-tests/src/main/resources/deployment/helm/supporting-infrastructure/"},"Example: Connector Configuration (Helm)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/docs/samples/Local%20TXDC%20Setup"},"Example: Local TXDC Setup")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/kits/product-edc/docs/samples/Transfer%20Data"},"Example: Data Transfer"))),(0,r.kt)("h3",{id:"eclipse-dataspace-connector"},"Eclipse Dataspace Connector"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/eclipse-edc/Connector/blob/main/docs/developer/architecture/domain-model.md"},"EDC Domain Model")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/eclipse-edc/Connector/blob/main/resources/openapi/openapi.yaml"},"EDC Open API Spec")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/eclipse-edc/Connector/tree/main/extensions/control-plane/http-receiver"},"HTTP Receiver Extension"))),(0,r.kt)("h3",{id:"catena-x"},"Catena-X"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Only accessible for Catena-X Members.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://confluence.catena-x.net/display/ARTI/Connector+Configuration"},"DAPS"))))}u.isMDXComponent=!0}}]);